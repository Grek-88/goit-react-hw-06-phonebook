{"version":3,"sources":["components/FindContact/FindContact.module.css","components/Section/Section.jsx","redux/actions.js","components/InputContact/InputContact.jsx","components/FindContact/FindContact.jsx","components/Contacts/Contacts.jsx","components/App/App.js","redux/reducer.js","redux/store.js","index.js","components/InputContact/InputContact.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","addContact","createAction","name","number","payload","id","Date","now","deleteContact","findContact","InputContact","props","contacts","useSelector","state","dispatch","useDispatch","className","s","form","onSubmit","e","preventDefault","items","find","el","toLowerCase","target","value","alert","label","input","type","pattern","required","button","FindContact","onChange","ev","Contacts","dataFilterContact","map","filter","includes","li","onClick","App","length","itemReducer","createReducer","action","filterReducer","_","reducerContacts","combineReducers","conatcsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.65589adb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FindContact_label__100mF\",\"input\":\"FindContact_input__qhYcC\"};","import React from \"react\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  )\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\", function prepare(\r\n  name,\r\n  number\r\n) {\r\n  return {\r\n    payload: {\r\n      id: Date.now(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const findContact = createAction(\"FIND_CONTACT\");\r\n","import s from \"../InputContact/InputContact.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actions\";\r\n\r\nexport default function InputContact(props) {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.items.find(\r\n        (el) => el.name.toLowerCase() === e.target.name.value.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`\"${e.target.name.value}\" is already in contacts.`);\r\n    } else {\r\n      dispatch(addContact(e.target.name.value, e.target.number.value));\r\n    }\r\n\r\n    e.target.name.value = \"\";\r\n    e.target.number.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из 5ти и более цифр, и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import s from \"../FindContact/FindContact.module.css\";\r\n\r\nexport default function FindContact(props) {\r\n  const findInputChange = (ev) => {\r\n    props.onChange(ev.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.input} onChange={findInputChange} />\r\n    </label>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact, findContact } from \"../../redux/actions\";\r\nimport FindContact from \"../FindContact/FindContact\";\r\nimport s from \"../Contacts/Contacts.module.css\";\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <FindContact\r\n        onChange={(dataFilterContact) =>\r\n          dispatch(findContact(dataFilterContact))\r\n        }\r\n      />\r\n\r\n      <ul>\r\n        {contacts?.items?.map((el) => {\r\n          if (contacts.filter) {\r\n            if (el.name.toLowerCase().includes(contacts.filter)) {\r\n              return (\r\n                <li key={el.id} className={s.li}>\r\n                  {el.name} {el.number}\r\n                  <button\r\n                    className={s.button}\r\n                    onClick={() => dispatch(deleteContact(el.id))}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              );\r\n            }\r\n          } else {\r\n            return (\r\n              <li key={el.id} className={s.li}>\r\n                {el.name} {el.number}\r\n                <button\r\n                  className={s.button}\r\n                  onClick={() => dispatch(deleteContact(el.id))}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          }\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\n\nimport Section from \"../Section/Section\";\nimport InputContact from \"../InputContact/InputContact\";\nimport Contacts from \"../Contacts/Contacts\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const contacts = useSelector((state) => state.contacts);\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <InputContact />\n      </Section>\n      {contacts.items.length > 0 && (\n        <Section title=\"Contacts\">\n          <Contacts />\n        </Section>\n      )}\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, findContact } from \"./actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst itemReducer = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter((el) => el.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [findContact.type]: (_, action) => action.payload,\r\n});\r\n\r\nconst reducerContacts = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: reducerContacts,\r\n});\r\n\r\nexport { rootReducer, reducerContacts };\r\n","import { reducerContacts } from \"./reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst conatcsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(conatcsPersistConfig, reducerContacts),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputContact_form__3h-JW\",\"label\":\"InputContact_label__CWbGi\",\"input\":\"InputContact_input__1LxST\",\"button\":\"InputContact_button__3tY-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__3mjuB\",\"button\":\"Contacts_button__1nUs9\"};"],"sourceRoot":""}